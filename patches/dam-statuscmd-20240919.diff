From cbe6377bd947f23e81205c107f4b9fec67573c88 Mon Sep 17 00:00:00 2001
From: Rentib <sbitner420@tutanota.com>
Date: Thu, 19 Sep 2024 13:09:39 +0200
Subject: [PATCH] statuscmd

---
 config.def.h |  2 ++
 dam.c        | 96 +++++++++++++++++++++++++++++++++++++++++++++++++---
 2 files changed, 93 insertions(+), 5 deletions(-)

diff --git a/config.def.h b/config.def.h
index cf3b469..8064050 100644
--- a/config.def.h
+++ b/config.def.h
@@ -15,3 +15,5 @@ static uint32_t colors[][3]  = {
 /* tagging */
 static char *tags[] = { "1", "2", "3", "4", "5", "6", "7", "8", "9" };
 static int tagspadding = 4;
+
+#define STATUSBAR "slstatus"
diff --git a/dam.c b/dam.c
index 25e9bfd..14356de 100644
--- a/dam.c
+++ b/dam.c
@@ -155,6 +155,7 @@ bar_load_fonts(Bar *bar)
 	bar->height = barheight ? barheight : bar->drw->font->height + 2;
 }
 
+static int statusw;
 static void
 bar_draw(Bar *bar)
 {
@@ -162,6 +163,7 @@ bar_draw(Bar *bar)
 	int tw = 0;
 	int x = 0, w;
 	DrwBuf *buf;
+	char *text, *s, ch;
 
 	if (!bar->configured)
 		return;
@@ -173,9 +175,35 @@ bar_draw(Bar *bar)
 
 	/* draw status first so it can be overdrawn by tags later */
 	if (bar == selbar) { /* status is only drawn on selected monitor */
+		statusw = 0;
+		for (text = s = stext; *s; s++) {
+			if ((unsigned char)(*s) < ' ') {
+				ch = *s;
+				*s = '\0';
+				statusw += TEXTW(bar, text) - bar->lrpad;
+				*s = ch;
+				text = s + 1;
+			}
+		}
+		statusw += TEXTW(bar, text) - bar->lrpad + 2;
+
 		drwl_setscheme(bar->drw, colors[SchemeNorm]);
-		tw = TEXTW(bar, stext) - bar->lrpad + 2; /* 2px right padding */
-		drwl_text(bar->drw, bar->width - tw, 0, tw, bar->height, 0, stext, 0);
+		x = 0;
+		for (text = s = stext; *s; s++) {
+			if ((unsigned char)(*s) < ' ') {
+				ch = *s;
+				*s = '\0';
+				tw = TEXTW(bar, text) - bar->lrpad;
+				drwl_text(bar->drw, bar->width - statusw + x, 0, tw, bar->height, 0, text, 0);
+				x += tw;
+				*s = ch;
+				text = s + 1;
+			}
+		}
+		tw = TEXTW(bar, text) - bar->lrpad + 2; /* 2px right padding */
+		drwl_text(bar->drw, bar->width - statusw + x, 0, tw, bar->height, 0, text, 0);
+		tw = statusw;
+		x = 0;
 	}
 
 	for (i = 0; i < LENGTH(tags); i++) {
@@ -435,6 +463,48 @@ pointer_motion(void *data, struct wl_pointer *wl_pointer, uint32_t time,
 	pointer.y = wl_fixed_to_int(surface_y);
 }
 
+static pid_t statuspid = -1;
+
+static pid_t
+getstatusbarpid(void)
+{
+	char buf[32], *str = buf, *c;
+	FILE *fp;
+
+	if (statuspid > 0) {
+		snprintf(buf, sizeof(buf), "/proc/%u/cmdline", statuspid);
+		if ((fp = fopen(buf, "r"))) {
+			fgets(buf, sizeof(buf), fp);
+			while ((c = strchr(str, '/')))
+				str = c + 1;
+			fclose(fp);
+			if (!strcmp(str, STATUSBAR))
+				return statuspid;
+		}
+	}
+	if (!(fp = popen("pidof -s "STATUSBAR, "r")))
+		return -1;
+	fgets(buf, sizeof(buf), fp);
+	pclose(fp);
+	return strtol(buf, NULL, 10);
+}
+
+static void sigstatusbar(int statussig, uint32_t button)
+{
+	union sigval sv;
+	if (!statussig)
+		return;
+	switch (button) {
+	case BTN_LEFT:   sv.sival_int = 1; break;
+	case BTN_MIDDLE: sv.sival_int = 2; break;
+	case BTN_RIGHT:  sv.sival_int = 3; break;
+	default: return;
+	}
+	if ((statuspid = getstatusbarpid()) <= 0)
+		return;
+	sigqueue(statuspid, SIGRTMIN + statussig, sv);
+}
+
 static void
 pointer_handle_frame(void *data, struct wl_pointer *wl_pointer)
 {
@@ -442,6 +512,8 @@ pointer_handle_frame(void *data, struct wl_pointer *wl_pointer)
 	unsigned int i = 0, /* j = 0, */ x = 0;
 	unsigned int click = -1;
 	char tagbuf[4];
+	int statussig = 0;
+	char *text, *s, ch;
 
 	if (!pointer.button || !selbar)
 		return;
@@ -463,9 +535,23 @@ pointer_handle_frame(void *data, struct wl_pointer *wl_pointer)
 		click = ClkMode;
 	else if (showlayout && pointer.x < x + lw)
 		click = ClkLayout;
-	else if (pointer.x > selbar->width - (int)TEXTW(selbar, stext))
+	else if (pointer.x > selbar->width - statusw) {
 		click = ClkStatus;
-	else if (showtitle)
+		x = selbar->width - statusw;
+		for (text = s = stext; *s && x <= pointer.x; s++) {
+			if ((unsigned char)(*s) < ' ') {
+				ch = *s;
+				*s = '\0';
+				int xd = TEXTW(selbar, text) - selbar->lrpad;
+				x += xd;
+				*s = ch;
+				text = s + 1;
+				if (x >= pointer.x)
+					break;
+				statussig = ch;
+			}
+		}
+	} else if (showtitle)
 		click = ClkTitle;
 
 	switch (click) {
@@ -489,7 +575,7 @@ pointer_handle_frame(void *data, struct wl_pointer *wl_pointer)
 		zriver_control_v1_run_command(control, seat);
 		break;
 	case ClkStatus:
-		/* dwm spawns termcmd */
+		sigstatusbar(statussig, pointer.button);
 		break;
 	default:
 		break;
-- 
2.46.1

